// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using qb8s.net.OptiFit.Persistence.Context;

#nullable disable

namespace qb8s.net.OptiFit.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250404084710_muscle_mappings")]
    partial class muscle_mappings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<Guid>("ExerciseCategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("exercise_category_id");

                    b.Property<string>("I18NCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("i18n_code");

                    b.HasKey("Id")
                        .HasName("pk_exercise");

                    b.HasIndex("ExerciseCategoryId")
                        .HasDatabaseName("ix_exercise_exercise_category_id");

                    b.HasIndex("I18NCode")
                        .IsUnique()
                        .HasDatabaseName("ix_exercise_i18n_code");

                    b.ToTable("exercise", (string)null);
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.ExerciseCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("I18NCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("i18n_code");

                    b.HasKey("Id")
                        .HasName("pk_exercise_category");

                    b.HasIndex("I18NCode")
                        .IsUnique()
                        .HasDatabaseName("ix_exercise_category_i18n_code");

                    b.ToTable("exercise_category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("92d3c7a3-bab6-4d49-afce-70ed62b7814e"),
                            I18NCode = "push"
                        },
                        new
                        {
                            Id = new Guid("b4508634-2e74-49b1-88bd-01041aed3e2b"),
                            I18NCode = "pull"
                        },
                        new
                        {
                            Id = new Guid("353cc6f0-c36d-493b-950c-0166f6159d25"),
                            I18NCode = "legs"
                        });
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.ExerciseMuscleMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uuid")
                        .HasColumnName("exercise_id");

                    b.Property<int?>("Intensity")
                        .HasColumnType("integer")
                        .HasColumnName("intensity");

                    b.Property<Guid>("MuscleId")
                        .HasColumnType("uuid")
                        .HasColumnName("muscle_id");

                    b.HasKey("Id")
                        .HasName("pk_exercise_muscle_mapping");

                    b.HasIndex("ExerciseId")
                        .HasDatabaseName("ix_exercise_muscle_mapping_exercise_id");

                    b.HasIndex("MuscleId")
                        .HasDatabaseName("ix_exercise_muscle_mapping_muscle_id");

                    b.ToTable("exercise_muscle_mapping", (string)null);
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Gym", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("city");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("name");

                    b.Property<int?>("ZipCode")
                        .HasColumnType("integer")
                        .HasColumnName("zip_code");

                    b.HasKey("Id")
                        .HasName("pk_gym");

                    b.ToTable("gym", (string)null);
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Insult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("message");

                    b.HasKey("Id")
                        .HasName("pk_insult");

                    b.ToTable("insult", (string)null);
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Muscle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("I18NCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("i18n_code");

                    b.HasKey("Id")
                        .HasName("pk_muscle");

                    b.HasIndex("I18NCode")
                        .IsUnique()
                        .HasDatabaseName("ix_muscle_i18n_code");

                    b.ToTable("muscle", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("dbf4ee29-c4d0-4d5e-8846-78c2632d4ea3"),
                            I18NCode = "pectoralis_major"
                        },
                        new
                        {
                            Id = new Guid("4805c4a7-9d81-4eee-951a-ba82aaeb0efb"),
                            I18NCode = "pectoralis_minor"
                        },
                        new
                        {
                            Id = new Guid("eb36b354-ef08-4bbf-b41b-244788bd62e1"),
                            I18NCode = "serratus_anterior"
                        },
                        new
                        {
                            Id = new Guid("8f97c242-448a-459f-8722-d00e789f488c"),
                            I18NCode = "latissimus_dorsi"
                        },
                        new
                        {
                            Id = new Guid("a8b00e77-002c-4db3-a22f-892934250f1b"),
                            I18NCode = "trapezius"
                        },
                        new
                        {
                            Id = new Guid("8c31da5a-9148-4808-990e-8d4ddda5238e"),
                            I18NCode = "rhomboids"
                        },
                        new
                        {
                            Id = new Guid("434ffe54-9c02-4fd0-b30c-8c4b47521c5c"),
                            I18NCode = "teres_major"
                        },
                        new
                        {
                            Id = new Guid("321ebc13-5400-44f6-9334-14bac89618ad"),
                            I18NCode = "erector_spinae"
                        },
                        new
                        {
                            Id = new Guid("062c3b7f-e3e7-4106-9e70-91860a7b32d7"),
                            I18NCode = "infraspinatus"
                        },
                        new
                        {
                            Id = new Guid("c1f824e4-215e-4aa5-b2eb-76980cb1fad2"),
                            I18NCode = "teres_minor"
                        },
                        new
                        {
                            Id = new Guid("825714d1-5df8-4d08-b28e-fa89c284ff73"),
                            I18NCode = "deltoid_anterior"
                        },
                        new
                        {
                            Id = new Guid("11fe1942-1954-4e4c-ac71-a65763b0d75b"),
                            I18NCode = "deltoid_lateral"
                        },
                        new
                        {
                            Id = new Guid("23893afe-3d7b-4202-90e9-30d5f8ce1875"),
                            I18NCode = "deltoid_posterior"
                        },
                        new
                        {
                            Id = new Guid("fa48dea0-0493-4923-841a-51a8b6649b30"),
                            I18NCode = "biceps_brachii"
                        },
                        new
                        {
                            Id = new Guid("80c63a73-a8f0-4d38-a038-898dbca6876e"),
                            I18NCode = "triceps_brachii"
                        },
                        new
                        {
                            Id = new Guid("85778671-d563-4b78-9f32-cb9598ad5ed3"),
                            I18NCode = "brachialis"
                        },
                        new
                        {
                            Id = new Guid("a1730500-474e-4de7-8e56-3a0d31fb49ad"),
                            I18NCode = "brachioradialis"
                        },
                        new
                        {
                            Id = new Guid("64b7017d-e26e-4f93-b92d-ba73b3941a36"),
                            I18NCode = "extensor_carpi_radialis"
                        },
                        new
                        {
                            Id = new Guid("d0f1a9f4-36b5-4b08-96b7-78ca232313eb"),
                            I18NCode = "flexor_carpi_radialis"
                        },
                        new
                        {
                            Id = new Guid("45220fe9-fb78-467c-98b6-7945e896e9f3"),
                            I18NCode = "flexor_carpi_ulnaris"
                        },
                        new
                        {
                            Id = new Guid("699d985d-0a73-45b2-9f7c-df004db7cb38"),
                            I18NCode = "adductor_magnus"
                        },
                        new
                        {
                            Id = new Guid("7aafc169-e3ab-4fa9-afa4-c82640d7359d"),
                            I18NCode = "adductor_longus_and_pectineus"
                        },
                        new
                        {
                            Id = new Guid("4ae8771a-0491-435f-82df-661a02c8cb69"),
                            I18NCode = "gracilis"
                        },
                        new
                        {
                            Id = new Guid("8906c044-9e04-464b-8cb9-51781ad15ab3"),
                            I18NCode = "biceps_femoris"
                        },
                        new
                        {
                            Id = new Guid("86d26416-93cf-444a-ac45-cf524887d321"),
                            I18NCode = "semitendinosus"
                        },
                        new
                        {
                            Id = new Guid("abc82724-f31f-40c1-a1f9-2bcf8ff5e7ab"),
                            I18NCode = "gastrocnemius_lateral"
                        },
                        new
                        {
                            Id = new Guid("c896e9b8-168c-406e-b065-5b2c668bca9a"),
                            I18NCode = "gastrocnemius_medial"
                        },
                        new
                        {
                            Id = new Guid("4823559d-03bb-43c8-826e-5412ddd7d791"),
                            I18NCode = "soleus"
                        },
                        new
                        {
                            Id = new Guid("cb23da08-21ad-43e6-8143-ef5112f4e834"),
                            I18NCode = "peroneus_longus"
                        },
                        new
                        {
                            Id = new Guid("0d508e78-63fd-4791-9cf7-9ae27c592992"),
                            I18NCode = "rectus_femoris"
                        },
                        new
                        {
                            Id = new Guid("45e5c3af-5e10-406e-b708-2abad02694b5"),
                            I18NCode = "vastus_lateralis"
                        },
                        new
                        {
                            Id = new Guid("26a51504-ec29-4c34-83d0-f30eb96f3618"),
                            I18NCode = "vastus_medialis"
                        },
                        new
                        {
                            Id = new Guid("947fc6f1-2efb-4037-9d4c-52efdd0bd8ff"),
                            I18NCode = "gluteus_maximus"
                        },
                        new
                        {
                            Id = new Guid("ae989ab5-ad02-43e1-b6d6-34724be14d29"),
                            I18NCode = "gluteus_medius"
                        },
                        new
                        {
                            Id = new Guid("a0b6e588-5ff2-4492-b6b8-cd3a08447613"),
                            I18NCode = "sartorius"
                        },
                        new
                        {
                            Id = new Guid("30efc5a1-dbaf-431b-af06-c4cfbedc3dbe"),
                            I18NCode = "tensor_fasciae_latae"
                        },
                        new
                        {
                            Id = new Guid("49580807-5aa7-4996-a0e9-0eb1a5919368"),
                            I18NCode = "external_obliques"
                        },
                        new
                        {
                            Id = new Guid("0d858c1e-ce72-49bf-98b4-90486c78f4cb"),
                            I18NCode = "rectus_abdominus"
                        },
                        new
                        {
                            Id = new Guid("b4ba2b1a-cff9-4f90-bf16-1a9e3911a62d"),
                            I18NCode = "rectus_abdominus_lower"
                        },
                        new
                        {
                            Id = new Guid("752d6779-4e22-4b59-b690-a4d839e67277"),
                            I18NCode = "thoracolumbar_fascia"
                        },
                        new
                        {
                            Id = new Guid("6ceece66-b399-4d45-ba58-f83397d51947"),
                            I18NCode = "lower_trapezius"
                        },
                        new
                        {
                            Id = new Guid("1fc2ee21-48de-4d04-be6b-705137cc0aba"),
                            I18NCode = "sternocleidomastoid"
                        },
                        new
                        {
                            Id = new Guid("e3446e83-664f-423a-9969-90a5a6ec6a03"),
                            I18NCode = "omohyoid"
                        });
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.MuscleGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("I18NCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("i18n_code");

                    b.HasKey("Id")
                        .HasName("pk_muscle_group");

                    b.HasIndex("I18NCode")
                        .IsUnique()
                        .HasDatabaseName("ix_muscle_group_i18n_code");

                    b.ToTable("muscle_group", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e05de925-1e66-4547-8950-1d26e5de9e11"),
                            I18NCode = "chest"
                        },
                        new
                        {
                            Id = new Guid("d26ed0c4-2941-49e9-9c09-efce5663ab92"),
                            I18NCode = "back"
                        },
                        new
                        {
                            Id = new Guid("af4d7669-3a4a-480b-b8aa-17e39ad4d8c8"),
                            I18NCode = "shoulders"
                        },
                        new
                        {
                            Id = new Guid("0a8ec2e6-f77d-4fdd-a216-e2bf7714c7f2"),
                            I18NCode = "arms"
                        },
                        new
                        {
                            Id = new Guid("ca487800-5fb6-46bd-a4a2-920234fa3008"),
                            I18NCode = "core"
                        },
                        new
                        {
                            Id = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            I18NCode = "legs"
                        },
                        new
                        {
                            Id = new Guid("d96149dd-5a5e-4cca-a94a-842693ae62cc"),
                            I18NCode = "neck"
                        });
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.MuscleGroupMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("MuscleGroupId")
                        .HasColumnType("uuid")
                        .HasColumnName("muscle_group_id");

                    b.Property<Guid>("MuscleId")
                        .HasColumnType("uuid")
                        .HasColumnName("muscle_id");

                    b.HasKey("Id")
                        .HasName("pk_muscle_group_mapping");

                    b.HasIndex("MuscleGroupId")
                        .HasDatabaseName("ix_muscle_group_mapping_muscle_group_id");

                    b.HasIndex("MuscleId")
                        .HasDatabaseName("ix_muscle_group_mapping_muscle_id");

                    b.ToTable("muscle_group_mapping", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("921265d2-ad78-425e-b63e-c8b44a1c05a5"),
                            MuscleGroupId = new Guid("e05de925-1e66-4547-8950-1d26e5de9e11"),
                            MuscleId = new Guid("dbf4ee29-c4d0-4d5e-8846-78c2632d4ea3")
                        },
                        new
                        {
                            Id = new Guid("966b7f6b-9881-4f0e-b217-4b80013839e7"),
                            MuscleGroupId = new Guid("e05de925-1e66-4547-8950-1d26e5de9e11"),
                            MuscleId = new Guid("4805c4a7-9d81-4eee-951a-ba82aaeb0efb")
                        },
                        new
                        {
                            Id = new Guid("86cb778d-7bd2-47ea-b9da-374e175a0e19"),
                            MuscleGroupId = new Guid("e05de925-1e66-4547-8950-1d26e5de9e11"),
                            MuscleId = new Guid("eb36b354-ef08-4bbf-b41b-244788bd62e1")
                        },
                        new
                        {
                            Id = new Guid("87723876-7436-4415-8a10-af0308683b03"),
                            MuscleGroupId = new Guid("af4d7669-3a4a-480b-b8aa-17e39ad4d8c8"),
                            MuscleId = new Guid("eb36b354-ef08-4bbf-b41b-244788bd62e1")
                        },
                        new
                        {
                            Id = new Guid("adb3a641-1fce-4cee-9992-8411ef57a3a3"),
                            MuscleGroupId = new Guid("d26ed0c4-2941-49e9-9c09-efce5663ab92"),
                            MuscleId = new Guid("a8b00e77-002c-4db3-a22f-892934250f1b")
                        },
                        new
                        {
                            Id = new Guid("7bc92a90-408e-4033-9b84-0b2b5c07dca2"),
                            MuscleGroupId = new Guid("af4d7669-3a4a-480b-b8aa-17e39ad4d8c8"),
                            MuscleId = new Guid("a8b00e77-002c-4db3-a22f-892934250f1b")
                        },
                        new
                        {
                            Id = new Guid("901360e1-0852-4740-aaba-4b51a2dadd8f"),
                            MuscleGroupId = new Guid("d26ed0c4-2941-49e9-9c09-efce5663ab92"),
                            MuscleId = new Guid("321ebc13-5400-44f6-9334-14bac89618ad")
                        },
                        new
                        {
                            Id = new Guid("07fc11a4-5198-4edd-9323-b09519544087"),
                            MuscleGroupId = new Guid("af4d7669-3a4a-480b-b8aa-17e39ad4d8c8"),
                            MuscleId = new Guid("321ebc13-5400-44f6-9334-14bac89618ad")
                        },
                        new
                        {
                            Id = new Guid("56c19c96-b597-405d-bd58-cdce4b91007e"),
                            MuscleGroupId = new Guid("d26ed0c4-2941-49e9-9c09-efce5663ab92"),
                            MuscleId = new Guid("23893afe-3d7b-4202-90e9-30d5f8ce1875")
                        },
                        new
                        {
                            Id = new Guid("3006945e-9c4d-477b-8740-b033cac055b2"),
                            MuscleGroupId = new Guid("0a8ec2e6-f77d-4fdd-a216-e2bf7714c7f2"),
                            MuscleId = new Guid("fa48dea0-0493-4923-841a-51a8b6649b30")
                        },
                        new
                        {
                            Id = new Guid("9493ba2b-0248-4ac7-af1b-6956b2fb02ce"),
                            MuscleGroupId = new Guid("0a8ec2e6-f77d-4fdd-a216-e2bf7714c7f2"),
                            MuscleId = new Guid("80c63a73-a8f0-4d38-a038-898dbca6876e")
                        },
                        new
                        {
                            Id = new Guid("9aa919ba-71f6-4230-b7c3-c31d2dfda69b"),
                            MuscleGroupId = new Guid("d26ed0c4-2941-49e9-9c09-efce5663ab92"),
                            MuscleId = new Guid("8f97c242-448a-459f-8722-d00e789f488c")
                        },
                        new
                        {
                            Id = new Guid("1f1e1c94-3cb9-4119-95ac-2ac59f70be4e"),
                            MuscleGroupId = new Guid("d26ed0c4-2941-49e9-9c09-efce5663ab92"),
                            MuscleId = new Guid("8c31da5a-9148-4808-990e-8d4ddda5238e")
                        },
                        new
                        {
                            Id = new Guid("6684811a-ce2b-4e26-8535-3f18c46042c9"),
                            MuscleGroupId = new Guid("af4d7669-3a4a-480b-b8aa-17e39ad4d8c8"),
                            MuscleId = new Guid("434ffe54-9c02-4fd0-b30c-8c4b47521c5c")
                        },
                        new
                        {
                            Id = new Guid("2a3803e9-006d-4b2b-a93f-425b24dc7219"),
                            MuscleGroupId = new Guid("af4d7669-3a4a-480b-b8aa-17e39ad4d8c8"),
                            MuscleId = new Guid("062c3b7f-e3e7-4106-9e70-91860a7b32d7")
                        },
                        new
                        {
                            Id = new Guid("229785ef-b58a-427d-b103-241d2022f7db"),
                            MuscleGroupId = new Guid("af4d7669-3a4a-480b-b8aa-17e39ad4d8c8"),
                            MuscleId = new Guid("c1f824e4-215e-4aa5-b2eb-76980cb1fad2")
                        },
                        new
                        {
                            Id = new Guid("9b358071-a6aa-4e29-a4cb-2bc219585294"),
                            MuscleGroupId = new Guid("af4d7669-3a4a-480b-b8aa-17e39ad4d8c8"),
                            MuscleId = new Guid("825714d1-5df8-4d08-b28e-fa89c284ff73")
                        },
                        new
                        {
                            Id = new Guid("4cd0e90d-d738-44ca-a018-9675c2407af5"),
                            MuscleGroupId = new Guid("af4d7669-3a4a-480b-b8aa-17e39ad4d8c8"),
                            MuscleId = new Guid("11fe1942-1954-4e4c-ac71-a65763b0d75b")
                        },
                        new
                        {
                            Id = new Guid("bcbc8be5-7083-4e74-ba03-c31a3d326de0"),
                            MuscleGroupId = new Guid("0a8ec2e6-f77d-4fdd-a216-e2bf7714c7f2"),
                            MuscleId = new Guid("85778671-d563-4b78-9f32-cb9598ad5ed3")
                        },
                        new
                        {
                            Id = new Guid("ceebd0cb-7b9d-43ec-9c17-28cc75a68fa6"),
                            MuscleGroupId = new Guid("0a8ec2e6-f77d-4fdd-a216-e2bf7714c7f2"),
                            MuscleId = new Guid("a1730500-474e-4de7-8e56-3a0d31fb49ad")
                        },
                        new
                        {
                            Id = new Guid("6bc18f0c-d74c-490c-a442-a6f46b0b1519"),
                            MuscleGroupId = new Guid("0a8ec2e6-f77d-4fdd-a216-e2bf7714c7f2"),
                            MuscleId = new Guid("64b7017d-e26e-4f93-b92d-ba73b3941a36")
                        },
                        new
                        {
                            Id = new Guid("72755086-3587-4c5d-9208-7bc7a62ad586"),
                            MuscleGroupId = new Guid("0a8ec2e6-f77d-4fdd-a216-e2bf7714c7f2"),
                            MuscleId = new Guid("d0f1a9f4-36b5-4b08-96b7-78ca232313eb")
                        },
                        new
                        {
                            Id = new Guid("273d6feb-0f9d-4ec7-946e-eafc841cab9d"),
                            MuscleGroupId = new Guid("0a8ec2e6-f77d-4fdd-a216-e2bf7714c7f2"),
                            MuscleId = new Guid("45220fe9-fb78-467c-98b6-7945e896e9f3")
                        },
                        new
                        {
                            Id = new Guid("a91bdaf1-2547-4e93-8c64-60b967f80bf3"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("699d985d-0a73-45b2-9f7c-df004db7cb38")
                        },
                        new
                        {
                            Id = new Guid("0bb8cbe6-8986-4871-8b5d-0101a9cf3c93"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("7aafc169-e3ab-4fa9-afa4-c82640d7359d")
                        },
                        new
                        {
                            Id = new Guid("3db6755d-13f0-4ab0-b2bc-6e5dd4343bed"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("4ae8771a-0491-435f-82df-661a02c8cb69")
                        },
                        new
                        {
                            Id = new Guid("a0613a49-1c57-4845-8ad0-975dac01272c"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("8906c044-9e04-464b-8cb9-51781ad15ab3")
                        },
                        new
                        {
                            Id = new Guid("b8cdc988-55db-4979-b867-f953eaa7f1aa"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("86d26416-93cf-444a-ac45-cf524887d321")
                        },
                        new
                        {
                            Id = new Guid("9bde4afe-0027-4c6e-a64f-96e7f6ad78b0"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("abc82724-f31f-40c1-a1f9-2bcf8ff5e7ab")
                        },
                        new
                        {
                            Id = new Guid("65f18292-d074-4ce0-9f06-d00698ddac9b"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("c896e9b8-168c-406e-b065-5b2c668bca9a")
                        },
                        new
                        {
                            Id = new Guid("5b3a35a9-0316-4645-866d-a76e4c108464"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("4823559d-03bb-43c8-826e-5412ddd7d791")
                        },
                        new
                        {
                            Id = new Guid("92511e42-782d-4c50-8797-7d21e13014d6"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("cb23da08-21ad-43e6-8143-ef5112f4e834")
                        },
                        new
                        {
                            Id = new Guid("1766a227-83e4-4ecc-998c-3b9305a1cd01"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("0d508e78-63fd-4791-9cf7-9ae27c592992")
                        },
                        new
                        {
                            Id = new Guid("e62e8d59-e2b8-4214-8b8c-237eaadd2860"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("45e5c3af-5e10-406e-b708-2abad02694b5")
                        },
                        new
                        {
                            Id = new Guid("e06b5396-7edc-4b07-9e0b-1305aca44a34"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("26a51504-ec29-4c34-83d0-f30eb96f3618")
                        },
                        new
                        {
                            Id = new Guid("6d37bdb7-d372-4a91-b89a-dee09076ee56"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("947fc6f1-2efb-4037-9d4c-52efdd0bd8ff")
                        },
                        new
                        {
                            Id = new Guid("66b2d341-bd71-4acf-a0af-b0edc0dc45ce"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("ae989ab5-ad02-43e1-b6d6-34724be14d29")
                        },
                        new
                        {
                            Id = new Guid("654346ee-4f8c-435f-94fd-525217b33204"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("a0b6e588-5ff2-4492-b6b8-cd3a08447613")
                        },
                        new
                        {
                            Id = new Guid("3b1cf97b-18d9-47d5-a58f-bd73e3108641"),
                            MuscleGroupId = new Guid("4279276a-ec31-4dc7-b4b4-b490d67acbd0"),
                            MuscleId = new Guid("30efc5a1-dbaf-431b-af06-c4cfbedc3dbe")
                        },
                        new
                        {
                            Id = new Guid("869d7620-93ce-4618-89a8-e0980793508f"),
                            MuscleGroupId = new Guid("ca487800-5fb6-46bd-a4a2-920234fa3008"),
                            MuscleId = new Guid("49580807-5aa7-4996-a0e9-0eb1a5919368")
                        },
                        new
                        {
                            Id = new Guid("3bf585d5-06c2-4b5e-b738-fc7049c78aad"),
                            MuscleGroupId = new Guid("ca487800-5fb6-46bd-a4a2-920234fa3008"),
                            MuscleId = new Guid("0d858c1e-ce72-49bf-98b4-90486c78f4cb")
                        },
                        new
                        {
                            Id = new Guid("8026649e-dad4-4d9d-92dd-bf1b1b355ce5"),
                            MuscleGroupId = new Guid("ca487800-5fb6-46bd-a4a2-920234fa3008"),
                            MuscleId = new Guid("b4ba2b1a-cff9-4f90-bf16-1a9e3911a62d")
                        },
                        new
                        {
                            Id = new Guid("05c17e09-8246-485d-b97e-34911eb9497d"),
                            MuscleGroupId = new Guid("ca487800-5fb6-46bd-a4a2-920234fa3008"),
                            MuscleId = new Guid("752d6779-4e22-4b59-b690-a4d839e67277")
                        },
                        new
                        {
                            Id = new Guid("abb74748-eae2-4130-85d9-561a841371ad"),
                            MuscleGroupId = new Guid("d26ed0c4-2941-49e9-9c09-efce5663ab92"),
                            MuscleId = new Guid("6ceece66-b399-4d45-ba58-f83397d51947")
                        },
                        new
                        {
                            Id = new Guid("5a345d20-15b9-441a-9305-48606fcedcf3"),
                            MuscleGroupId = new Guid("d96149dd-5a5e-4cca-a94a-842693ae62cc"),
                            MuscleId = new Guid("1fc2ee21-48de-4d04-be6b-705137cc0aba")
                        },
                        new
                        {
                            Id = new Guid("2b85e782-ece9-4b2c-b842-1f7b4f0a9cb8"),
                            MuscleGroupId = new Guid("d96149dd-5a5e-4cca-a94a-842693ae62cc"),
                            MuscleId = new Guid("e3446e83-664f-423a-9969-90a5a6ec6a03")
                        });
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTimeOffset?>("DateOfBirthUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth_utc");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("first_name");

                    b.Property<bool>("InitialSetupDone")
                        .HasColumnType("boolean")
                        .HasColumnName("initial_setup_done");

                    b.Property<DateTimeOffset?>("LastLoginUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_login_utc");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("last_name");

                    b.Property<Guid>("OId")
                        .HasColumnType("uuid")
                        .HasColumnName("o_id");

                    b.Property<DateTimeOffset>("RegisteredUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registered_utc")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("TotalInsults")
                        .HasColumnType("integer")
                        .HasColumnName("total_insults");

                    b.Property<DateTimeOffset>("UpdatedUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_utc")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("user_name");

                    b.Property<Guid?>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValue(new Guid("a42ccbdf-e689-4b12-9333-88c19fe8462d"))
                        .HasColumnName("user_role_id");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasDatabaseName("ix_user_user_name");

                    b.HasIndex("UserRoleId")
                        .HasDatabaseName("ix_user_user_role_id");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("275cfdca-c686-4ea1-80b1-f2425b1602c5"),
                            DateOfBirthUtc = new DateTimeOffset(new DateTime(1992, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            Email = "t1000@mstoegerer.net",
                            FirstName = "Arnold",
                            InitialSetupDone = false,
                            LastName = "Schwarzenegger",
                            OId = new Guid("00000000-0000-0000-0000-000000000000"),
                            RegisteredUtc = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            TotalInsults = 0,
                            UpdatedUtc = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            UserName = "TheTerminator"
                        });
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.UserInsult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("InsultId")
                        .HasColumnType("uuid")
                        .HasColumnName("insult_id");

                    b.Property<DateTimeOffset>("TimeStampUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("time_stamp_utc");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_insult");

                    b.HasIndex("InsultId")
                        .HasDatabaseName("ix_user_insult_insult_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_user_insult_user_id");

                    b.ToTable("user_insult", (string)null);
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_user_role");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_user_role_name");

                    b.ToTable("user_role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a42ccbdf-e689-4b12-9333-88c19fe8462d"),
                            Name = "Root-Admin"
                        },
                        new
                        {
                            Id = new Guid("8e281066-f933-4f7e-95c8-c4acab20a7e9"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("da18fe0f-5590-471d-9288-9481bc6396d7"),
                            Name = "Moderator"
                        },
                        new
                        {
                            Id = new Guid("034ba653-e026-4f13-a050-3d0d9b408be2"),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("47c81565-a603-42a7-bbdc-a3d41ccfb022"),
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Workout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<DateTimeOffset?>("EndAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end_at_utc");

                    b.Property<Guid>("GymId")
                        .HasColumnType("uuid")
                        .HasColumnName("gym_id");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("notes");

                    b.Property<DateTimeOffset>("StartAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_at_utc");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_workout");

                    b.HasIndex("GymId")
                        .HasDatabaseName("ix_workout_gym_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_workout_user_id");

                    b.ToTable("workout", (string)null);
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.WorkoutExercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uuid")
                        .HasColumnName("exercise_id");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("notes");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("uuid")
                        .HasColumnName("workout_id");

                    b.HasKey("Id")
                        .HasName("pk_workout_exercise");

                    b.HasIndex("ExerciseId")
                        .HasDatabaseName("ix_workout_exercise_exercise_id");

                    b.HasIndex("WorkoutId")
                        .HasDatabaseName("ix_workout_exercise_workout_id");

                    b.ToTable("workout_exercise", (string)null);
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.WorkoutSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<int>("Reps")
                        .HasColumnType("integer")
                        .HasColumnName("reps");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric")
                        .HasColumnName("weight");

                    b.Property<Guid>("WorkoutExerciseId")
                        .HasColumnType("uuid")
                        .HasColumnName("workout_exercise_id");

                    b.HasKey("Id")
                        .HasName("pk_workout_set");

                    b.HasIndex("WorkoutExerciseId")
                        .HasDatabaseName("ix_workout_set_workout_exercise_id");

                    b.ToTable("workout_set", (string)null);
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Exercise", b =>
                {
                    b.HasOne("qb8s.net.OptiFit.Core.Entities.ExerciseCategory", "ExerciseCategory")
                        .WithMany("Exercises")
                        .HasForeignKey("ExerciseCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exercise_exercise_category_exercise_category_id");

                    b.Navigation("ExerciseCategory");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.ExerciseMuscleMapping", b =>
                {
                    b.HasOne("qb8s.net.OptiFit.Core.Entities.Exercise", "Exercise")
                        .WithMany("ExerciseMuscleMappings")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exercise_muscle_mapping_exercises_exercise_id");

                    b.HasOne("qb8s.net.OptiFit.Core.Entities.Muscle", "Muscle")
                        .WithMany("ExerciseMuscleMappings")
                        .HasForeignKey("MuscleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exercise_muscle_mapping_muscles_muscle_id");

                    b.Navigation("Exercise");

                    b.Navigation("Muscle");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.MuscleGroupMapping", b =>
                {
                    b.HasOne("qb8s.net.OptiFit.Core.Entities.MuscleGroup", "MuscleGroup")
                        .WithMany("MuscleGroupMappings")
                        .HasForeignKey("MuscleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_muscle_group_mapping_muscle_group_muscle_group_id");

                    b.HasOne("qb8s.net.OptiFit.Core.Entities.Muscle", "Muscle")
                        .WithMany("MuscleGroupMappings")
                        .HasForeignKey("MuscleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_muscle_group_mapping_muscle_muscle_id");

                    b.Navigation("Muscle");

                    b.Navigation("MuscleGroup");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.User", b =>
                {
                    b.HasOne("qb8s.net.OptiFit.Core.Entities.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("fk_user_user_roles_user_role_id");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.UserInsult", b =>
                {
                    b.HasOne("qb8s.net.OptiFit.Core.Entities.Insult", "Insult")
                        .WithMany("UserInsultsCollection")
                        .HasForeignKey("InsultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_insult_insult_insult_id");

                    b.HasOne("qb8s.net.OptiFit.Core.Entities.User", "User")
                        .WithMany("UserInsults")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_insult_user_user_id");

                    b.Navigation("Insult");

                    b.Navigation("User");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Workout", b =>
                {
                    b.HasOne("qb8s.net.OptiFit.Core.Entities.Gym", "Gym")
                        .WithMany("Workouts")
                        .HasForeignKey("GymId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workout_gym_gym_id");

                    b.HasOne("qb8s.net.OptiFit.Core.Entities.User", "User")
                        .WithMany("Workouts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workout_user_user_id");

                    b.Navigation("Gym");

                    b.Navigation("User");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.WorkoutExercise", b =>
                {
                    b.HasOne("qb8s.net.OptiFit.Core.Entities.Exercise", "Exercise")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workout_exercise_exercises_exercise_id");

                    b.HasOne("qb8s.net.OptiFit.Core.Entities.Workout", "Workout")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workout_exercise_workouts_workout_id");

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.WorkoutSet", b =>
                {
                    b.HasOne("qb8s.net.OptiFit.Core.Entities.WorkoutExercise", "WorkoutExercise")
                        .WithMany("WorkoutSets")
                        .HasForeignKey("WorkoutExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workout_set_workout_exercise_workout_exercise_id");

                    b.Navigation("WorkoutExercise");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Exercise", b =>
                {
                    b.Navigation("ExerciseMuscleMappings");

                    b.Navigation("WorkoutExercises");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.ExerciseCategory", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Gym", b =>
                {
                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Insult", b =>
                {
                    b.Navigation("UserInsultsCollection");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Muscle", b =>
                {
                    b.Navigation("ExerciseMuscleMappings");

                    b.Navigation("MuscleGroupMappings");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.MuscleGroup", b =>
                {
                    b.Navigation("MuscleGroupMappings");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.User", b =>
                {
                    b.Navigation("UserInsults");

                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.UserRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Workout", b =>
                {
                    b.Navigation("WorkoutExercises");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.WorkoutExercise", b =>
                {
                    b.Navigation("WorkoutSets");
                });
#pragma warning restore 612, 618
        }
    }
}
