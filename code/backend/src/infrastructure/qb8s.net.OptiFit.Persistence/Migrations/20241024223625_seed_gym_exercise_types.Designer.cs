// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using qb8s.net.OptiFit.Persistence.Context;

#nullable disable

namespace qb8s.net.OptiFit.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241024223625_seed_gym_exercise_types")]
    partial class seed_gym_exercise_types
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("ExerciseTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("exercise_type_id");

                    b.Property<string>("I18NCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("i18n_code");

                    b.HasKey("Id")
                        .HasName("pk_exercise");

                    b.HasIndex("ExerciseTypeId")
                        .HasDatabaseName("ix_exercise_exercise_type_id");

                    b.ToTable("exercise", (string)null);
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.ExerciseMuscleGroupMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uuid")
                        .HasColumnName("exercise_id");

                    b.Property<Guid>("MuscleGroupId")
                        .HasColumnType("uuid")
                        .HasColumnName("muscle_group_id");

                    b.HasKey("Id")
                        .HasName("pk_exercise_muscle_group_mappings");

                    b.HasIndex("ExerciseId")
                        .HasDatabaseName("ix_exercise_muscle_group_mappings_exercise_id");

                    b.HasIndex("MuscleGroupId")
                        .HasDatabaseName("ix_exercise_muscle_group_mappings_muscle_group_id");

                    b.ToTable("exercise_muscle_group_mappings", (string)null);
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.ExerciseMuscleMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uuid")
                        .HasColumnName("exercise_id");

                    b.Property<Guid>("MuscleId")
                        .HasColumnType("uuid")
                        .HasColumnName("muscle_id");

                    b.HasKey("Id")
                        .HasName("pk_exercise_muscle_mapping");

                    b.HasIndex("ExerciseId")
                        .HasDatabaseName("ix_exercise_muscle_mapping_exercise_id");

                    b.HasIndex("MuscleId")
                        .HasDatabaseName("ix_exercise_muscle_mapping_muscle_id");

                    b.ToTable("exercise_muscle_mapping", (string)null);
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.ExerciseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("I18NCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("i18n_code");

                    b.HasKey("Id")
                        .HasName("pk_exercise_type");

                    b.HasIndex("I18NCode")
                        .IsUnique()
                        .HasDatabaseName("ix_exercise_type_i18n_code");

                    b.ToTable("exercise_type", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("92d3c7a3-bab6-4d49-afce-70ed62b7814e"),
                            I18NCode = "push"
                        },
                        new
                        {
                            Id = new Guid("b4508634-2e74-49b1-88bd-01041aed3e2b"),
                            I18NCode = "pull"
                        },
                        new
                        {
                            Id = new Guid("353cc6f0-c36d-493b-950c-0166f6159d25"),
                            I18NCode = "legs"
                        });
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Gym", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("city");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("zip_code");

                    b.HasKey("Id")
                        .HasName("pk_gym");

                    b.ToTable("gym", (string)null);
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Muscle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("I18NCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("i18n_code");

                    b.HasKey("Id")
                        .HasName("pk_muscle");

                    b.HasIndex("I18NCode")
                        .IsUnique()
                        .HasDatabaseName("ix_muscle_i18n_code");

                    b.ToTable("muscle", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("dbf4ee29-c4d0-4d5e-8846-78c2632d4ea3"),
                            I18NCode = "pectoralis_major"
                        },
                        new
                        {
                            Id = new Guid("4805c4a7-9d81-4eee-951a-ba82aaeb0efb"),
                            I18NCode = "pectoralis_minor"
                        },
                        new
                        {
                            Id = new Guid("eb36b354-ef08-4bbf-b41b-244788bd62e1"),
                            I18NCode = "serratus_anterior"
                        },
                        new
                        {
                            Id = new Guid("8f97c242-448a-459f-8722-d00e789f488c"),
                            I18NCode = "latissimus_dorsi"
                        },
                        new
                        {
                            Id = new Guid("a8b00e77-002c-4db3-a22f-892934250f1b"),
                            I18NCode = "trapezius"
                        },
                        new
                        {
                            Id = new Guid("8c31da5a-9148-4808-990e-8d4ddda5238e"),
                            I18NCode = "rhomboids"
                        },
                        new
                        {
                            Id = new Guid("434ffe54-9c02-4fd0-b30c-8c4b47521c5c"),
                            I18NCode = "teres_major"
                        },
                        new
                        {
                            Id = new Guid("321ebc13-5400-44f6-9334-14bac89618ad"),
                            I18NCode = "erector_spinae"
                        },
                        new
                        {
                            Id = new Guid("062c3b7f-e3e7-4106-9e70-91860a7b32d7"),
                            I18NCode = "infraspinatus"
                        },
                        new
                        {
                            Id = new Guid("c1f824e4-215e-4aa5-b2eb-76980cb1fad2"),
                            I18NCode = "teres_minor"
                        },
                        new
                        {
                            Id = new Guid("825714d1-5df8-4d08-b28e-fa89c284ff73"),
                            I18NCode = "deltoid_anterior"
                        },
                        new
                        {
                            Id = new Guid("11fe1942-1954-4e4c-ac71-a65763b0d75b"),
                            I18NCode = "deltoid_lateral"
                        },
                        new
                        {
                            Id = new Guid("23893afe-3d7b-4202-90e9-30d5f8ce1875"),
                            I18NCode = "deltoid_posterior"
                        },
                        new
                        {
                            Id = new Guid("fa48dea0-0493-4923-841a-51a8b6649b30"),
                            I18NCode = "biceps_brachii"
                        },
                        new
                        {
                            Id = new Guid("80c63a73-a8f0-4d38-a038-898dbca6876e"),
                            I18NCode = "triceps_brachii"
                        });
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.MuscleGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("I18NCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("i18n_code");

                    b.HasKey("Id")
                        .HasName("pk_muscle_group");

                    b.HasIndex("I18NCode")
                        .IsUnique()
                        .HasDatabaseName("ix_muscle_group_i18n_code");

                    b.ToTable("muscle_group", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e05de925-1e66-4547-8950-1d26e5de9e11"),
                            I18NCode = "chest"
                        },
                        new
                        {
                            Id = new Guid("d26ed0c4-2941-49e9-9c09-efce5663ab92"),
                            I18NCode = "back"
                        },
                        new
                        {
                            Id = new Guid("af4d7669-3a4a-480b-b8aa-17e39ad4d8c8"),
                            I18NCode = "shoulders"
                        },
                        new
                        {
                            Id = new Guid("0a8ec2e6-f77d-4fdd-a216-e2bf7714c7f2"),
                            I18NCode = "arms"
                        },
                        new
                        {
                            Id = new Guid("ca487800-5fb6-46bd-a4a2-920234fa3008"),
                            I18NCode = "core"
                        });
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.MuscleGroupMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("MuscleGroupId")
                        .HasColumnType("uuid")
                        .HasColumnName("muscle_group_id");

                    b.Property<Guid>("MuscleId")
                        .HasColumnType("uuid")
                        .HasColumnName("muscle_id");

                    b.HasKey("Id")
                        .HasName("pk_muscle_group_mapping");

                    b.HasIndex("MuscleGroupId")
                        .HasDatabaseName("ix_muscle_group_mapping_muscle_group_id");

                    b.HasIndex("MuscleId")
                        .HasDatabaseName("ix_muscle_group_mapping_muscle_id");

                    b.ToTable("muscle_group_mapping", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("921265d2-ad78-425e-b63e-c8b44a1c05a5"),
                            MuscleGroupId = new Guid("e05de925-1e66-4547-8950-1d26e5de9e11"),
                            MuscleId = new Guid("dbf4ee29-c4d0-4d5e-8846-78c2632d4ea3")
                        },
                        new
                        {
                            Id = new Guid("966b7f6b-9881-4f0e-b217-4b80013839e7"),
                            MuscleGroupId = new Guid("e05de925-1e66-4547-8950-1d26e5de9e11"),
                            MuscleId = new Guid("4805c4a7-9d81-4eee-951a-ba82aaeb0efb")
                        },
                        new
                        {
                            Id = new Guid("86cb778d-7bd2-47ea-b9da-374e175a0e19"),
                            MuscleGroupId = new Guid("e05de925-1e66-4547-8950-1d26e5de9e11"),
                            MuscleId = new Guid("eb36b354-ef08-4bbf-b41b-244788bd62e1")
                        },
                        new
                        {
                            Id = new Guid("87723876-7436-4415-8a10-af0308683b03"),
                            MuscleGroupId = new Guid("af4d7669-3a4a-480b-b8aa-17e39ad4d8c8"),
                            MuscleId = new Guid("eb36b354-ef08-4bbf-b41b-244788bd62e1")
                        },
                        new
                        {
                            Id = new Guid("adb3a641-1fce-4cee-9992-8411ef57a3a3"),
                            MuscleGroupId = new Guid("d26ed0c4-2941-49e9-9c09-efce5663ab92"),
                            MuscleId = new Guid("a8b00e77-002c-4db3-a22f-892934250f1b")
                        },
                        new
                        {
                            Id = new Guid("7bc92a90-408e-4033-9b84-0b2b5c07dca2"),
                            MuscleGroupId = new Guid("af4d7669-3a4a-480b-b8aa-17e39ad4d8c8"),
                            MuscleId = new Guid("a8b00e77-002c-4db3-a22f-892934250f1b")
                        },
                        new
                        {
                            Id = new Guid("901360e1-0852-4740-aaba-4b51a2dadd8f"),
                            MuscleGroupId = new Guid("d26ed0c4-2941-49e9-9c09-efce5663ab92"),
                            MuscleId = new Guid("321ebc13-5400-44f6-9334-14bac89618ad")
                        },
                        new
                        {
                            Id = new Guid("07fc11a4-5198-4edd-9323-b09519544087"),
                            MuscleGroupId = new Guid("af4d7669-3a4a-480b-b8aa-17e39ad4d8c8"),
                            MuscleId = new Guid("321ebc13-5400-44f6-9334-14bac89618ad")
                        },
                        new
                        {
                            Id = new Guid("56c19c96-b597-405d-bd58-cdce4b91007e"),
                            MuscleGroupId = new Guid("d26ed0c4-2941-49e9-9c09-efce5663ab92"),
                            MuscleId = new Guid("23893afe-3d7b-4202-90e9-30d5f8ce1875")
                        },
                        new
                        {
                            Id = new Guid("3006945e-9c4d-477b-8740-b033cac055b2"),
                            MuscleGroupId = new Guid("0a8ec2e6-f77d-4fdd-a216-e2bf7714c7f2"),
                            MuscleId = new Guid("fa48dea0-0493-4923-841a-51a8b6649b30")
                        },
                        new
                        {
                            Id = new Guid("9493ba2b-0248-4ac7-af1b-6956b2fb02ce"),
                            MuscleGroupId = new Guid("0a8ec2e6-f77d-4fdd-a216-e2bf7714c7f2"),
                            MuscleId = new Guid("80c63a73-a8f0-4d38-a038-898dbca6876e")
                        });
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTimeOffset?>("DateOfBirthUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth_utc");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("first_name");

                    b.Property<bool>("InitialSetupDone")
                        .HasColumnType("boolean")
                        .HasColumnName("initial_setup_done");

                    b.Property<DateTimeOffset?>("LastLoginUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_login_utc");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("last_name");

                    b.Property<Guid>("OId")
                        .HasColumnType("uuid")
                        .HasColumnName("o_id");

                    b.Property<DateTimeOffset>("RegisteredUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registered_utc")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTimeOffset>("UpdatedUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_utc")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("user_name");

                    b.Property<Guid?>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValue(new Guid("034ba653-e026-4f13-a050-3d0d9b408be2"))
                        .HasColumnName("user_role_id");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasDatabaseName("ix_user_user_name");

                    b.HasIndex("UserRoleId")
                        .HasDatabaseName("ix_user_user_role_id");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("275cfdca-c686-4ea1-80b1-f2425b1602c5"),
                            DateOfBirthUtc = new DateTimeOffset(new DateTime(1992, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            FirstName = "Arnold",
                            InitialSetupDone = false,
                            LastName = "Schwarzenegger",
                            OId = new Guid("00000000-0000-0000-0000-000000000000"),
                            RegisteredUtc = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            UpdatedUtc = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            UserName = "TheTerminator"
                        });
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_user_role");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_user_role_name");

                    b.ToTable("user_role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a42ccbdf-e689-4b12-9333-88c19fe8462d"),
                            Name = "Root-Admin"
                        },
                        new
                        {
                            Id = new Guid("8e281066-f933-4f7e-95c8-c4acab20a7e9"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("da18fe0f-5590-471d-9288-9481bc6396d7"),
                            Name = "Moderator"
                        },
                        new
                        {
                            Id = new Guid("034ba653-e026-4f13-a050-3d0d9b408be2"),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("47c81565-a603-42a7-bbdc-a3d41ccfb022"),
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Exercise", b =>
                {
                    b.HasOne("qb8s.net.OptiFit.Core.Entities.ExerciseType", "ExerciseType")
                        .WithMany("Exercises")
                        .HasForeignKey("ExerciseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exercise_exercise_types_exercise_type_id");

                    b.Navigation("ExerciseType");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.ExerciseMuscleGroupMapping", b =>
                {
                    b.HasOne("qb8s.net.OptiFit.Core.Entities.Exercise", "Exercise")
                        .WithMany("ExerciseMuscleGroupMappings")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exercise_muscle_group_mappings_exercises_exercise_id");

                    b.HasOne("qb8s.net.OptiFit.Core.Entities.MuscleGroup", "MuscleGroup")
                        .WithMany("ExerciseMuscleGroupMappings")
                        .HasForeignKey("MuscleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exercise_muscle_group_mappings_muscle_groups_muscle_group_id");

                    b.Navigation("Exercise");

                    b.Navigation("MuscleGroup");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.ExerciseMuscleMapping", b =>
                {
                    b.HasOne("qb8s.net.OptiFit.Core.Entities.Exercise", "Exercise")
                        .WithMany("ExerciseMuscleMappings")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exercise_muscle_mapping_exercises_exercise_id");

                    b.HasOne("qb8s.net.OptiFit.Core.Entities.Muscle", "Muscle")
                        .WithMany("ExerciseMuscleMappings")
                        .HasForeignKey("MuscleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exercise_muscle_mapping_muscles_muscle_id");

                    b.Navigation("Exercise");

                    b.Navigation("Muscle");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.MuscleGroupMapping", b =>
                {
                    b.HasOne("qb8s.net.OptiFit.Core.Entities.MuscleGroup", "MuscleGroup")
                        .WithMany("MuscleGroupMappings")
                        .HasForeignKey("MuscleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_muscle_group_mapping_muscle_group_muscle_group_id");

                    b.HasOne("qb8s.net.OptiFit.Core.Entities.Muscle", "Muscle")
                        .WithMany("MuscleGroupMappings")
                        .HasForeignKey("MuscleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_muscle_group_mapping_muscle_muscle_id");

                    b.Navigation("Muscle");

                    b.Navigation("MuscleGroup");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.User", b =>
                {
                    b.HasOne("qb8s.net.OptiFit.Core.Entities.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("fk_user_user_roles_user_role_id");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Exercise", b =>
                {
                    b.Navigation("ExerciseMuscleGroupMappings");

                    b.Navigation("ExerciseMuscleMappings");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.ExerciseType", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.Muscle", b =>
                {
                    b.Navigation("ExerciseMuscleMappings");

                    b.Navigation("MuscleGroupMappings");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.MuscleGroup", b =>
                {
                    b.Navigation("ExerciseMuscleGroupMappings");

                    b.Navigation("MuscleGroupMappings");
                });

            modelBuilder.Entity("qb8s.net.OptiFit.Core.Entities.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
